# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: off
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '$([System.DateTime]::Now.ToString(`yyyyMMdd`)).$([System.DateTime]::Now.ToString(`HHmm`))'

- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install -g NuGetKeyVaultSignTool'

- task: PowerShell@2
  inputs:
    failOnStderr: true
    targetType: 'inline'
    script: 'Get-ChildItem "./" -R -Filter *.nupkg | ForEach-Object {  $output = (& "$HOME/.dotnet/tools/NuGetKeyVaultSignTool.exe" sign "$_.FullName" --file-digest sha256 --timestamp-rfc3161 http://timestamp.digicert.com --timestamp-digest sha256 --azure-key-vault-url "$Env:VaultUrl" --azure-key-vault-client-id "$Env:VaultId" --azure-key-vault-client-secret "$Env:VaultSecret" --azure-key-vault-certificate "$Env:VaultCertname" 2>&1 | %{ "$_" }); Write-Host $output }'
  env:
    VaultCertname: $(VaultCertname)
    VaultId: $(VaultId)
    VaultSecret: $(VaultSecret)
    VaultUrl: $(VaultUrl)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '**/*.nupkg'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org'